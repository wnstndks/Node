<!-- ejs 파일은 views에 보관 -->
<!-- ejs 파일도 html과 똑같음 -->
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <link href="../main.css" rel="stylesheet">
</head>

<body class="grey-bg">
  <!-- <%=글목록%> -->
  <%- include('nav.ejs') %>
    <!-- 리스트 출력 -->
    <div class="white-bg">
      <% for (let i=(pageNum-1)*perPage; i<Math.min(pageNum*perPage, 글목록.length); i++){ %>
        <div class="list-box">
          <h4>
            <a href="/detail/<%=글목록[i]._id%>">
              <%= 글목록[i].title %>
            </a>
            <a href="/edit/<%=글목록[i]._id%>">✏️</a>
            <a href="/delete/<%=글목록[i]._id%>">🗑️</a>
          </h4>
          <p>
            <%= 글목록[i].content%>
          </p>
        </div>
        <% } %>
    </div>

    <!-- 페이지네이션 -->
    <div style="display:flex; justify-content: center;">
      <% for (let j=0; j<Math.ceil(글목록.length/perPage); j++) { %>
        <div class="page" style="display:flex;">
          <a href="/<%=j+1%>" class="bt">
            <%= j+1 %>
          </a>
        </div>
        <% } %>
    </div>


    <script>
      //  모든 에러상황 다 할수있음
      // fetch('/URL')
      //   .then((r) => {
      //     if (r.status == 200) {
      //       return r.json()
      //     } else {
      //       //서버가 에러코드전송시 실행할코드
      //     }
      //   })
      //   .then((result) => {
      //     //성공시 실행할코드
      //   }).catch((error) => {
      //     //인터넷문제 등으로 실패시 실행할코드
      //     console.log(error)
      //   })
    </script>



    <!-- <%- %>는 그 안에 들어있는게 html인 경우 그걸 실제로 렌더링
         <%= %>는 일반 문자처럼 보여줌
    -->
    <!-- axios 문법이용해서 다 할수 있는 것 -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</body>

</html>